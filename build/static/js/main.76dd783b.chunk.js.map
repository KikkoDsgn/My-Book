{"version":3,"sources":["App.jsx","index.js"],"names":["App","useState","maxResults","setMaxResults","startIndex","setStartIndex","query","setQuery","loading","setLoading","cards","setCards","handleSubmit","toast","error","axios","get","then","res","data","totalItems","items","length","console","log","catch","err","response","message","className","style","zIndex","width","InputGroup","size","Input","placeholder","value","onChange","e","target","InputGroupAddon","addonType","Button","color","onClick","FormGroup","Label","for","type","id","Spinner","height","handleCards","ReactDOM","render","document","getElementById"],"mappings":"uTA0HeA,MAxGf,WAAe,MAEuBC,mBAAS,IAFhC,mBAENC,EAFM,KAEMC,EAFN,OAGuBF,mBAAS,GAHhC,mBAGNG,EAHM,KAGMC,EAHN,OAIaJ,mBAAS,IAJtB,mBAINK,EAJM,KAICC,EAJD,OAKgBN,oBAAS,GALzB,mBAKNO,EALM,KAKGC,EALH,OAMaR,mBAAS,IANtB,mBAMNS,EANM,KAMCC,EAND,KASPC,EAAe,WACnBH,GAAW,GACRP,EAAa,IAAMA,EAAa,EACjCW,IAAMC,MAAM,iDAEZC,IACEC,IADF,wDAEoDV,EAFpD,uBAEwEJ,EAFxE,uBAEiGE,IAC9Fa,MAAK,SAAAC,GACDd,GAAcc,EAAIC,KAAKC,YAAchB,EAAY,EAClDS,IAAMC,MAAN,4CACuCI,EAAIC,KAAKC,aAG7CF,EAAIC,KAAKE,MAAMC,OAAS,IACzBX,EAASO,EAAIC,KAAKE,OAClBZ,GAAW,IAGfc,QAAQC,IAAId,MAEde,OAAM,SAAAC,GACLjB,GAAW,GACXI,IAAMC,MAAN,UAAeY,EAAIC,SAASR,KAAKL,MAAMc,cA+D9C,OACE,6BAxDA,yBAAKC,UAAU,2EAEf,yBAAKA,UAAU,WACf,wBAAIA,UAAU,wCAAwCC,MAAO,CAACC,OAAQ,IAAtE,YAGA,yBAAKD,MAAO,CAAEE,MAAO,MAAOD,OAAQ,IACpC,kBAACE,EAAA,EAAD,CAAYC,KAAK,KAAKL,UAAU,QAC9B,kBAACM,EAAA,EAAD,CACAC,YAAY,iCACZC,MAAQ/B,EACRgC,SAAU,SAAAC,GAAC,OAAIhC,EAASgC,EAAEC,OAAOH,UAGjC,kBAACI,EAAA,EAAD,CAAiBC,UAAU,UACvB,kBAACC,EAAA,EAAD,CAAQC,MAAM,YAAYC,QAASjC,GAChC,uBAAGiB,UAAU,iBAAb,YAIT,yBAAKA,UAAU,4CACX,kBAACiB,EAAA,EAAD,CAAWjB,UAAU,QACjB,kBAACkB,EAAA,EAAD,CAAOC,IAAI,cAAX,qBACA,kBAACb,EAAA,EAAD,CACAc,KAAK,SACLC,GAAG,aACHd,YAAY,cACZC,MAAQnC,EACRoC,SAAU,SAAAC,GAAC,OAAIpC,EAAcoC,EAAEC,OAAOH,WAG1C,kBAACS,EAAA,EAAD,CAAWjB,UAAU,QACjB,kBAACkB,EAAA,EAAD,CAAOC,IAAI,cAAX,UACA,kBAACb,EAAA,EAAD,CACAc,KAAK,SACLC,GAAG,aACHd,YAAY,cACZC,MAAOjC,EACPkC,SAAU,SAAAC,GAAC,OAAIlC,EAAckC,EAAEC,OAAOH,cAQ5B,WAClB,GAAG7B,EACD,OACE,yBAAKqB,UAAU,sCACZ,kBAACsB,EAAA,EAAD,CAASrB,MAAQ,CAAEE,MAAO,OAAQoB,OAAQ,WAQhDC,GACD,kBAAC,IAAD,QC/GJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.76dd783b.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {\n  InputGroup,\n  Input,\n  InputGroupAddon,\n  Button,\n  FormGroup,\n  Label,\n  Spinner\n} from 'reactstrap';\n\n import { ToastContainer, toast } from 'react-toastify';\n\n import 'react-toastify/dist/ReactToastify.css';\n\n import axios from 'axios'\n\nfunction App() {\n  // States\n  const [maxResults, setMaxResults] = useState(10);\n  const [startIndex, setStartIndex] = useState(1);\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] =useState(false);\n  const [cards, setCards] = useState([]);\n\n  //handleSubmit\n  const handleSubmit = () => {\n    setLoading(true);\n    if(maxResults > 40 || maxResults < 1) {\n      toast.error('I risultati devono essere compresi tra 1 e 40')\n    } else {\n      axios\n       .get(\n         `https://www.googleapis.com/books/v1/volumes?q=${query}&maxResults=${maxResults}&startIndex=${startIndex}`\n       ).then(res=> {\n         if (startIndex >= res.data.totalItems || startIndex <1) {\n            toast.error(\n              `max results must be between 1 and ${res.data.totalItems}`\n            );\n          } else {\n            if(res.data.items.length > 0) {\n              setCards(res.data.items);\n              setLoading(false);\n            }\n          }\n          console.log(cards);\n       })\n       .catch(err=> {\n         setLoading(true)\n         toast.error(`${err.response.data.error.message}`)\n       });\n    }\n  };\n\n  //Main Show Case\n  const mainHeader = () => {\n    return (\n    <div className='main-image d-flex justify-content-center align-items-center flex-column'>\n    {/* Overlay */}\n    <div className=\"filter\"></div>\n    <h1 className=\"display-2 text-center text-white mb-3\" style={{zIndex: 2}}>\n     My Books\n    </h1>\n    <div style={{ width: '60%', zIndex: 2 }}>\n    <InputGroup size='lg' className='mb-3'>\n      <Input\n      placeholder='Inserisci il nome del libro...'\n      value={ query}\n      onChange={e => setQuery(e.target.value)}\n        />\n\n      <InputGroupAddon addonType='append'>\n          <Button color='secondary' onClick={handleSubmit}>\n             <i className='fas fa-search'>Cerca</i>\n          </Button>\n      </InputGroupAddon>\n    </InputGroup>\n    <div className='d-flex text-white justify-content-center'>\n        <FormGroup className='ml-5'>\n            <Label for='maxResults'>Risultati Massimi</Label>\n            <Input\n            type='number'\n            id='maxResults'\n            placeholder='Max Results'\n            value={ maxResults}\n            onChange={e => setMaxResults(e.target.value)}\n            />\n        </FormGroup>\n        <FormGroup className='ml-5'>\n            <Label for='startIndex'>Indice</Label>\n            <Input\n            type='number'\n            id='startIndex'\n            placeholder='Start Index'\n            value={startIndex}\n            onChange={e => setStartIndex(e.target.value)}/>\n        </FormGroup>\n    </div>\n    </div>\n    </div>\n  );\n};\n\n  const handleCards = () =>  {\n    if(loading) {\n      return (\n        <div className='d-flex justify-content-center mb-3'>\n           <Spinner style={ { width: '3rem', height: '3rem' }}/>\n        </div>\n      )\n    }\n  }\n  return (\n    <div>\n    {mainHeader()}\n    {handleCards()}\n    <ToastContainer />\n  </div>\n);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}